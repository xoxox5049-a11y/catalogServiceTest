create table users
(
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email VARCHAR(254) NOT NULL,
    username VARCHAR(32) NOT NULL,
    password_hash VARCHAR(100) NOT NULL,
    enabled BOOLEAN NOT NULL DEFAULT true,
    created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
    updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
    CONSTRAINT users_password_hash_len_chk CHECK ( char_length(password_hash) >= 60 )
);
CREATE UNIQUE INDEX ux_users_email_ci    ON users (lower(email));
CREATE UNIQUE INDEX ux_users_username_ci ON users (lower(username));

create table roles
(
    id SMALLINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(32) NOT NULL,
    CONSTRAINT roles_name_uq UNIQUE (name),
    CONSTRAINT roles_name_chk CHECK ( name LIKE 'ROLE_%' )
);

create table user_roles
(
    user_id BIGINT   NOT NULL,
    role_id SMALLINT NOT NULL,

    CONSTRAINT user_roles_pk PRIMARY KEY (user_id, role_id),
    CONSTRAINT fk_user_roles_user FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
    CONSTRAINT fk_user_roles_role FOREIGN KEY (role_id) REFERENCES roles(id) ON DELETE CASCADE
);
CREATE INDEX ix_user_roles_role ON user_roles(role_id);

INSERT INTO roles(name) VALUES ('ROLE_USER')  ON CONFLICT (name) DO NOTHING;
INSERT INTO roles(name) VALUES ('ROLE_ADMIN') ON CONFLICT (name) DO NOTHING;
